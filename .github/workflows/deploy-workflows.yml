name: Deploy Aws Ecs Workflow
run-name: Deploy branch ${{ github.ref_name }} to ${{ inputs.environment }} environment by @${{ github.actor }}

on:
  push:
    branches:
      - test2
env:
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY || github.event.repository.name }}-ecr-dev
  ECS_CLUSTER_NAME: ${{ vars.ECS_CLUSTER_NAME || github.event.repository.name }}-cluster-dev
  ECS_SERVICE_NAME: ${{ vars.ECS_SERVICE_NAME || github.event.repository.name }}-service-dev
  ECS_TASK_DEFINITION: ${{ vars.ECS_TASK_DEFINITION || github.event.repository.name }}-task-dev
  ECS_TASK_VCPU: ${{ vars.ECS_TASK_VCPU || '256' }}
  ECS_TASK_MEMORY: ${{ vars.ECS_TASK_MEMORY || '512' }}
  ECS_SERVICE_DESIRED_CNT: ${{ vars.ECS_SERVICE_DESIRED_CNT || 1 }}

  ECS_CONTAINER_NAME: ${{ vars.ECS_CONTAINER_NAME || github.event.repository.name }}-container-dev
  ECS_CONTAINER_WEB_VCPU: ${{ vars.ECS_CONTAINER_WEB_VCPU || '256' }}
  ECS_CONTAINER_WEB_MEMORY: ${{ vars.ECS_CONTAINER_WEB_MEMORY || '512' }}

  ECS_TASK_EXECUTE_ROLE: ${{ vars.ECS_TASK_EXECUTE_ROLE || 'ecsTaskExecutionRole' }}
  ECS_PUB_SUBNET1: ${{ vars.ECS_PUB_SUBNET1 || ' ' }}
  ECS_PUB_SUBNET2: ${{ vars.ECS_PUB_SUBNET2 || ' ' }}
  ECS_SECURITY_GROUP: ${{ vars.ECS_SECURITY_GROUP || ' ' }}
  ECS_VPC_ID: ${{ vars.ECS_VPC_ID || ' ' }}
  ECS_ALB_TARGET_GROUP_ARN: ${{ vars.ECS_ALB_TARGET_GROUP_ARN || ' ' }}
  ECS_CREATE_NEW_VPC: ${{ vars.ECS_CREATE_NEW_VPC || 'false' }}

  APP_NAME: ${{ github.event.repository.name }}-app
  ENV_SAMPLE_PATH: ${{ vars.ENV_SAMPLE_PATH || 's3://environment-setting/.ursula.dev.env.example' }}

jobs:
  build-infra:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'dev' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Prepare data config
        run: |
          desired_cnt=$(printf "%d" "$ECS_SERVICE_DESIRED_CNT")
          echo "ECS_SERVICE_DESIRED_CNT=$desired_cnt" >> $GITHUB_ENV

      - name: Substitute environment variables in file config
        working-directory: ./deploy-config/ecspresso
        run: |
          envsubst < task-definition.tpl.json > task-definition.json
          envsubst < service-definition.tpl.json > service-definition.json
          envsubst < ecspresso.tpl.yml > ecspresso.yml
        env:
          ECS_PUB_SUBNET1: ${{ env.ECS_PUB_SUBNET1 }}
          ECS_PUB_SUBNET2: ${{ env.ECS_PUB_SUBNET2 }}
          ECS_SECURITY_GROUP: ${{ env.ECS_SECURITY_GROUP }}
          ECS_ALB_TARGET_GROUP_ARN: ${{  env.ECS_ALB_TARGET_GROUP_ARN }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          APP_ENV: 'dev'
          ECS_IMAGE: 'Image test'
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Show ecspresso.yml
        working-directory: ./deploy-config/ecspresso
        run: |
          cat ecspresso.yml
          cat task-definition.json
          cat service-definition.json

